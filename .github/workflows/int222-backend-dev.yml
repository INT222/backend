name: int222-backend-dev
on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Change variable and file_name for your own env (from .env to path/to/application.properties)
      # Set up secrets for DB connection
      # Change DB_URL for the correct environment
      # Example:
      #   DEV: jdbc:mysql://dev_mysqldb:3306/sandalsshop (dev_mysqldb = [db_container_name]) (container_name depends on your naming or folder)
      #   PRD: jdbc:mysql://prd_mysqldb:3306/sandalsshop (prd_mysqldb = [db_container_name]) (container_name depends on your naming or folder)
      - name: Create .env file
        run: |
          echo spring.datasource.url=${{ secrets.DEV_DB_URL }} >> ./src/main/resources/application.properties
          echo spring.datasource.username=${{ secrets.DEV_DB_USERNAME }} >> ./src/main/resources/application.properties
          echo spring.datasource.password=${{ secrets.DEV_DB_PASSWORD }} >> ./src/main/resources/application.properties

      - name: Send .env file to host
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOSTNAME }} 
          username: ${{ secrets.SSH_USERNAME }} 
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ./src/main/resources/application.properties
          target: ~/backend/dev/

      # Don't do anything
      - name: Login to Github Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          - name: Build and push
        uses: docker/build-push-action@v2
        with:
        context: .
        push: true
        tags: ghcr.io/int222/backend:dev

      - name: Publish compose file
        uses: appleboy/scp-action@master
        with:
          # Set up secrets for SSH connection
          host: ${{ secrets.SSH_HOSTNAME }} # IP Example: 111.222.111.222
          username: ${{ secrets.SSH_USERNAME }} # Username Example: qwanjai
          key: ${{ secrets.SSH_PRIVATE_KEY }} # Private key
          # docker-compose file you want to send
          source: ./docker-compose.dev.yml
          # Destination file where you want to send to
          target: ~/backend/dev/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run application
        uses: appleboy/ssh-action@master
        with:
          # Set up secrets for SSH connection
          host: ${{ secrets.SSH_HOSTNAME }} # IP Example: 111.222.111.222
          username: ${{ secrets.SSH_USERNAME }} # Username Example: qwanjai
          key: ${{ secrets.SSH_PRIVATE_KEY }} # Private key
          # Run a specified docker-compose file you want to run
          script: |
            docker-compose -f ~/backend/dev/docker-compose.dev.yml pull
            docker-compose -f ~/backend/dev/docker-compose.dev.yml up -d
